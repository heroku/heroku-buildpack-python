#!/usr/bin/env bash

# This file is run by the inline buildpack, and tests that the environment is
# configured as expected for buildpacks that run after the Python buildpack.

set -euo pipefail

BUILD_DIR="${1}"
CACHE_DIR="${2}"

cd "${BUILD_DIR}"

printenv | sort | grep -vE '^(_|BUILDPACK_LOG_FILE|DYNO|HOME|OLDPWD|PWD|REQUEST_ID|SHLVL|SOURCE_VERSION|STACK)='
echo

python -c 'import pprint, sys; pprint.pp(sys.path)'
echo

pipenv --version
# We have to resort to using pip to list installed packages, since `pipenv graph` doesn't support `--system`.
python -m ensurepip --default-pip >/dev/null
pip list --disable-pip-version-check --exclude pip
echo

python -c 'import typing_extensions; print(typing_extensions)'
echo

jq --sort-keys '.' "${CACHE_DIR}/build-data/python.json"
